spring:
  config:
    import: optional:file:.env[.properties]
  data:
    redis:
      host: cache_redis
      port: 6379
  datasource:
    url: jdbc:postgresql://localhost:5432/bedtime_stories
    password: ${DB_PASSWORD}
    username: ${DB_USERNAME}
    driver-class-name: org.postgresql.Driver
  jpa:
    show-sql: true
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: validate
    open-in-view: false
    properties:
      hibernate:
        format_sql: true
  liquibase:
    change-log: classpath:db/changelog/main-changelog.xml
    enabled: true
    drop-first: false
    default-schema: public
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            redirectUri: "{baseUrl}/api/oauth2/callback/{registrationId}"
  mail:
    host: smtp.gmail.com
    port: 587
    username: ${MAIL_USER_EMAIL}
    password: ${MAIL_PASSWORD}
    properties:
      mail.smtp.auth: true
      mail.smtp.starttls.enable: true
    sender:
      email: notification-service@gmail.com
      text: no-reply
server:
  servlet:
    session:
      cookie:
        same-site: lax # to allow oauth2 & sending cookie
  port: 8080
logging:
  level:
    liquibase: trace
    org.springframework.cache: trace
    org.springframework.security: info
app:
  csrf-attribute: _csrf
  front-url: ${FRONT_END_URL}
  allowed-origins: ${FRONT_END_URL}
  login-success-url: ${FRONT_END_URL}/
  jwt-secret-key: ${JWT_SECRET_KEY}
  jwt-access-token-expiration: 900
  jwt-refresh-token-expiration: 604800
  jwt-access-token-name: accessToken
  jwt-refresh-token-name: refreshToken